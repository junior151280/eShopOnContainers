name: Blue/Green WebMVC - AKS

on: workflow_dispatch

env:
  AZ_RG_NAME: 'rg-eShopOnContainers'
  AZ_AKS_NAME: 'aks-eShopOnContainers'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
        
    - name: Docker Login
      uses: docker/login-action@v1.14.1
      with:
        registry: ${{ secrets.ACR_URL }}
        username: ${{ secrets.ACR_LOGIN }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Web MVC image
      uses: docker/build-push-action@v2.10.0
      with:
        context: src
        file: src/Web/WebMVC/Dockerfile
        tags: |
          ${{secrets.ACR_URL}}/eshop/webmvc:${{ GITHUB.RUN_NUMBER }}
          ${{secrets.ACR_URL}}/eshop/webmvc:linux-latest
        push: true

    - name: Replace variables
      run: |
        sed -i 's|_ConnString_|${{ secrets.AZURE_SQL_CONNECTION }}|g' src/Web/WebMVC/kubernetes-web-mvc.yaml
        sed -i 's|_ImageTag_|${{ GITHUB.RUN_NUMBER }}|g' src/Web/WebMVC/kubernetes-web-mvc.yaml
        
    - name: Upload Kubernetes files
      uses: actions/upload-artifact@v3.0.0
      with:
        name: DEV
        path: |
          src/Web/WebMVC/kubernetes-web-mvc.yaml
          src/Web/WebMVC/kubernetes-web-mvc-service.yaml
        
  release:
    needs: build
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Download k8s artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: DEV
          path: my-app-artifact
      
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - name: Deploy set context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.AZ_AKS_NAME }}
          resource-group: ${{ env.AZ_RG_NAME }}

      - name: Check Services Current Role
        run: |
          echo "Login Azure Services"
          az login --service-principal -u "${{ secrets.AZURE_CLIENT_ID }}" -p "${{ secrets.AZURE_CLIENT_SECRET }}" -t "${{ secrets.AZURE_TENANT_ID }}"

          echo "Set Azure Subscription"
          az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

          echo "Get credentials for AKS cluster"
          az aks get-credentials --resource-group "${{ env.AZ_RG_NAME }}" --name "${{ env.AZ_AKS_NAME }}" --admin --file kubeconfig

          echo "Logout Azure Services"
          az logout

          echo "Get current role"
          current_role="$(kubectl --kubeconfig kubeconfig get services webmvc -o=jsonpath='{.spec.selector.role}')"
          echo "Current role: $current_role"
          
          echo "Define new role"
          [[ $current_role = 'blue' ]] && newRole='green' || newRole='blue'
          echo "newRole: $newRole"

          echo "Replace role in k8s files"
          sed -i "s|_TargetRole_|$newRole|g" my-app-artifact/kubernetes-web-mvc.yaml
          sed -i "s|_TargetRole_|$newRole|g" my-app-artifact/kubernetes-web-mvc-service.yaml

      # Deploy app to AKS
      - name: Deploy to k8s
        uses: azure/k8s-deploy@v4
        with:
          manifests: my-app-artifact/kubernetes-web-mvc.yaml
          namespace: default

      - name: Upload Kubernetes files
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Production
          path: |
            my-app-artifact/kubernetes-web-mvc.yaml
            my-app-artifact/kubernetes-web-mvc-service.yaml

  switch:
    needs: release
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Download k8s artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: Production
          path: my-app-artifact
      
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - name: Deploy set context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.AZ_AKS_NAME }}
          resource-group: ${{ env.AZ_RG_NAME }}

      # Deploy app to AKS
      - name: Deploy to k8s
        uses: azure/k8s-deploy@v4
        with:
          manifests: my-app-artifact/kubernetes-web-mvc-service.yaml
          namespace: default